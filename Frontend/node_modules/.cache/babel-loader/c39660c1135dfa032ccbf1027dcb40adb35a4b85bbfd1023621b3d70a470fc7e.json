{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82103\\\\cookfarm-frontend\\\\src\\\\pages\\\\RegisterPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Input } from '../components/Input';\nimport { Button } from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignUpPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // 에러 메시지 초기화\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.email) {\n      newErrors.email = '이메일을 입력해주세요';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = '올바른 이메일 형식이 아닙니다';\n    }\n    if (!formData.password) {\n      newErrors.password = '비밀번호를 입력해주세요';\n    } else if (formData.password.length < 6) {\n      newErrors.password = '비밀번호는 최소 6자 이상이어야 합니다';\n    }\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = '비밀번호 확인을 입력해주세요';\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = '비밀번호가 일치하지 않습니다';\n    }\n    if (!formData.name) {\n      newErrors.name = '이름을 입력해주세요';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setIsLoading(true);\n    try {\n      // TODO: API 호출 로직 구현\n      console.log('회원가입 시도:', formData);\n      // 성공 시 처리\n    } catch (error) {\n      console.error('회원가입 실패:', error);\n      // 에러 처리\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-6 text-center text-3xl font-extrabold text-gray-900\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mt-8 space-y-6\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            label: \"\\uC774\\uBA54\\uC77C\",\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            error: errors.email,\n            placeholder: \"your@email.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            error: errors.password,\n            placeholder: \"******\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n            type: \"password\",\n            name: \"confirmPassword\",\n            value: formData.confirmPassword,\n            onChange: handleChange,\n            error: errors.confirmPassword,\n            placeholder: \"******\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"\\uC774\\uB984\",\n            type: \"text\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange,\n            error: errors.name,\n            placeholder: \"\\uD64D\\uAE38\\uB3D9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          isLoading: isLoading,\n          className: \"w-full\",\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpPage, \"dYuyfH30FRXBfM6uChdflp8n6Jw=\");\n_c = SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","useState","Input","Button","jsxDEV","_jsxDEV","SignUpPage","_s","formData","setFormData","email","password","confirmPassword","name","errors","setErrors","isLoading","setIsLoading","handleChange","e","value","target","prev","validateForm","newErrors","test","length","Object","keys","handleSubmit","preventDefault","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","onChange","placeholder","variant","_c","$RefreshReg$"],"sources":["C:/Users/82103/cookfarm-frontend/src/pages/RegisterPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Input } from '../components/Input';\r\nimport { Button } from '../components/Button';\r\n\r\ninterface SignUpForm {\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  name: string;\r\n}\r\n\r\nexport const SignUpPage: React.FC = () => {\r\n  const [formData, setFormData] = useState<SignUpForm>({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    name: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState<Partial<SignUpForm>>({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    // 에러 메시지 초기화\r\n    if (errors[name as keyof SignUpForm]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Partial<SignUpForm> = {};\r\n\r\n    if (!formData.email) {\r\n      newErrors.email = '이메일을 입력해주세요';\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n      newErrors.email = '올바른 이메일 형식이 아닙니다';\r\n    }\r\n\r\n    if (!formData.password) {\r\n      newErrors.password = '비밀번호를 입력해주세요';\r\n    } else if (formData.password.length < 6) {\r\n      newErrors.password = '비밀번호는 최소 6자 이상이어야 합니다';\r\n    }\r\n\r\n    if (!formData.confirmPassword) {\r\n      newErrors.confirmPassword = '비밀번호 확인을 입력해주세요';\r\n    } else if (formData.password !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = '비밀번호가 일치하지 않습니다';\r\n    }\r\n\r\n    if (!formData.name) {\r\n      newErrors.name = '이름을 입력해주세요';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      // TODO: API 호출 로직 구현\r\n      console.log('회원가입 시도:', formData);\r\n      // 성공 시 처리\r\n    } catch (error) {\r\n      console.error('회원가입 실패:', error);\r\n      // 에러 처리\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            회원가입\r\n          </h2>\r\n        </div>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          <div className=\"space-y-4\">\r\n            <Input\r\n              label=\"이메일\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              error={errors.email}\r\n              placeholder=\"your@email.com\"\r\n            />\r\n            <Input\r\n              label=\"비밀번호\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              error={errors.password}\r\n              placeholder=\"******\"\r\n            />\r\n            <Input\r\n              label=\"비밀번호 확인\"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              value={formData.confirmPassword}\r\n              onChange={handleChange}\r\n              error={errors.confirmPassword}\r\n              placeholder=\"******\"\r\n            />\r\n            <Input\r\n              label=\"이름\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              error={errors.name}\r\n              placeholder=\"홍길동\"\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n            isLoading={isLoading}\r\n            className=\"w-full\"\r\n          >\r\n            가입하기\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}